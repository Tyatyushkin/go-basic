services:
  mpm:
    image: ghcr.io/tyatyushkin/mpm:latest
    container_name: mpm
    volumes:
      - /opt/mpm/data:/opt/mpm/data
    ports:
      - "8484:8484"
      - "50051:50051"  # gRPC port
    restart: unless-stopped
    environment:
      - TZ=UTC
      - MPM_STORAGE_TYPE=${MPM_STORAGE_TYPE:-postgres}
      
      # PostgreSQL configuration
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-mpm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mpm_password}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-mpm_db}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE:-disable}
      
      # JWT configuration
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-me}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    container_name: mpm_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-mpm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mpm_password}
      - POSTGRES_DB=${POSTGRES_DATABASE:-mpm_db}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/storage/postgres/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mpm_user} -d ${POSTGRES_DATABASE:-mpm_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data: